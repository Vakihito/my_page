ARG VARIANT="3.10"
FROM mcr.microsoft.com/vscode/devcontainers/python:0-${VARIANT}

# Install curl and other necessary tools
RUN apt-get update && \
    apt-get install -y curl gnupg && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install Node.js 22.1.0 and npm 10.7.0
RUN curl -fsSL https://deb.nodesource.com/setup_22.x | bash - && \
apt-get install -y nodejs=22.1.0-1nodesource1 && \
npm install -g npm@10.7.0 && \
apt-get clean && \
rm -rf /var/lib/apt/lists/*



RUN pip install poetry==1.3.1
RUN poetry config virtualenvs.create false

# Install Docker CE CLI
RUN apt-get update \
    && apt-get install -y apt-transport-https ca-certificates curl gnupg2 lsb-release \
    && curl -fsSL https://download.docker.com/linux/$(lsb_release -is | tr '[:upper:]' '[:lower:]')/gpg | apt-key add - 2>/dev/null \
    && echo "deb [arch=$(dpkg --print-architecture)] https://download.docker.com/linux/$(lsb_release -is | tr '[:upper:]' '[:lower:]') $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list \
    && apt-get update \
    && apt-get install -y docker-ce-cli

# Install Docker Compose
RUN LATEST_COMPOSE_VERSION=$(curl -sSL "https://api.github.com/repos/docker/compose/releases/latest" | grep -o -P '(?<="tag_name": ").+(?=")') \
    && curl -sSL "https://github.com/docker/compose/releases/download/${LATEST_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose \
    && chmod +x /usr/local/bin/docker-compose

# Install wget
RUN apt-get update \
    && apt-get install -y wget

# Install utils and tools
RUN apt-get install -y bat exa fd-find fzf git htop jq less ripgrep tldr tree

RUN mkdir -p ~/.local/bin
RUN ln -s /usr/bin/batcat ~/.local/bin/bat

WORKDIR /workspace

ENV PYTHONPATH /workspace

COPY . ./workspace

EXPOSE 3000

EXPOSE 8080

CMD ["uvicorn", "src.main.app:app", "--host", "0.0.0.0", "--port", "80"]